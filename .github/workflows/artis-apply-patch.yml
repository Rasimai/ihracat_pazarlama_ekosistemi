name: Artis Apply Patch

on:
  workflow_dispatch:
    inputs:
      patch:
        description: "Unified diff (patch) content"
        required: true
        type: string
      branch:
        description: "Target branch (will be created/updated)"
        required: true
        default: "artis/update-${{ github.run_id }}"
        type: string
      commit_message:
        description: "Commit message"
        required: true
        default: "chore: apply patch via Artis"
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Prepare branch
        run: |
          set -e
          BRANCH="${{ github.event.inputs.branch }}"
          git checkout -B "$BRANCH"

      - name: Apply patch
        shell: bash
        run: |
          set -euo pipefail
          cat >/tmp/changes.patch <<'PATCH_EOF'
${{ github.event.inputs.patch }}
PATCH_EOF
          # Güvenlik: boş patch geldiyse hata ver
          if [ ! -s /tmp/changes.patch ]; then
            echo "Patch is empty; aborting."
            exit 1
          fi
          # Uygula
          git apply --whitespace=fix /tmp/changes.patch

      - name: Commit
        shell: bash
        run: |
          set -e
          git config user.name "artis-bot"
          git config user.email "artis-bot@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "${{ github.event.inputs.commit_message }}"

      - name: Push with PAT
        env:
          PAT: ${{ secrets.ARTIS_PAT }}
        run: |
          set -e
          BRANCH="${{ github.event.inputs.branch }}"
          git push "https://x-access-token:${PAT}@github.com/${{ github.repository }}.git" HEAD:"$BRANCH"

      - name: Open PR
        if: ${{ success() }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ARTIS_PAT }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const head = process.env.BRANCH;
            const base = "main";
            const title = process.env.TITLE;
            await github.rest.pulls.create({
              owner, repo, head, base, title,
              body: "Automated change by Artis"
            });
        env:
          BRANCH: ${{ github.event.inputs.branch }}
          TITLE: ${{ github.event.inputs.commit_message }}
